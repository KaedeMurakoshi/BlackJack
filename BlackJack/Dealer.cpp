#include <iostream>
#include"Dealer.h"
using namespace std;

// BlackJack.cppのグローバル変数を使う
extern const char* suitName[];

// コンストラクタ
Dealer::Dealer()
{
	for (int i = 0; i < HAND_SIZE; ++i)
	{
		_hand[i].num = 0;
		_hand[i].suit = SPADE;
	}
	_handIndex = 0;
}

// 手札を表示（ディーラーは一枚目だけ開示）
void Dealer::ShowAllHands(bool showAll)const
{
	printf("===================\n");

	// 手札が０枚の時
	if (_handIndex <= 0)
	{
		printf("[エラー]手札がありません\n");
		return;
	}

	printf("(ディーラーの手札)\n");

	// showAllがtrueの時は手札をすべて表示
	if (showAll)
	{
		// 手札をすべて表示
		for (int i = 0; i < _handIndex; ++i)
		{
			printf("[%sの%d]\n", suitName[_hand[i].suit], _hand[i].num);
		}
	}
	// showAllがfalseの時は一枚だけ表示
	else
	{
		// 一枚だけ表示
		printf("[%sの%d]\n", suitName[_hand[0].suit], _hand[0].num);

		for (int i = 1; i < _handIndex; ++i)
		{
			printf("[？の？]\n");
		}
	}

	printf("===================\n");
}

bool Dealer::Play(Deck& deck)
{
	while (CalcScore())
	{
		Draw(deck);
		ShowAllHands(false);
	}

	return false;
}

// バースト又はstandしたらfalseを返す
bool Dealer::CalcScore()
{
	int sum = 0;				// 合計点数
	bool haveAce = false;		// Aが手札にあるかどうか

	// 手札の点数をカウント
	// Aは先に１点としてカウントし、後で合計値によって１０点加点することで、１１点とする
	for (int i = 0; i < _handIndex; ++i)
	{
		// 手札にAがあれば
		if (_hand[i].num == 1)
		{
			haveAce = true;
		}

		// １０以上の数は１０点で計算
		if (_hand[i].num >= 10)
		{
			sum += 10;
		}
		// それ以外はそのままの点数
		else
		{
			sum += _hand[i].num;
		}
	}

	// Aがあり、手札の合計点が１１点以下なら１０点加算
	if (haveAce && sum <= 11)
	{
		sum += 10;
	}

	// 合計点数表示
	printf("\nディーラーの合計点数：%d\n", sum);

	// 17未満ならtrueを返して継続
	if (sum < 17)
	{
		printf("17未満。hitします\n");
		return true;
	}
	// 17以上21以下ならfalseを返してstand
	else if (17 <= sum && sum <= VINGT_ET_UN)
	{
		printf("standします\n");
		return false;
	}
	// ２１を超えたらfalse
	else
	{
		printf("おいおい、バーストしちまったよ\n");
		return false;
	}
}

// カードを引く部分が冗長なので関数化
// カードを一枚引き手札に加える、引いたカードを表示
void Dealer::Draw(Deck& deck)
{
	// 山札から一枚引いて保存
	Card nextCard = deck.GetDeckCard();

	// 手札に引いたカードの情報を書き込む
	_hand[_handIndex].suit = nextCard.suit;
	_hand[_handIndex].num = nextCard.num;

	//手札のインデックス更新
	++_handIndex;
}